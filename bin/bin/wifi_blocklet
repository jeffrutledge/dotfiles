#!/bin/zsh
#
# Output is formatted for i3blocks
#
# args[in]
#   $1 button

# if clicked then rswifi
if ! [ -z "$1" ]
then
  echo $1 >> ~/temp/wifi_blocklet_button
  echo W: rs
  echo W: rs
  echo $(colorscheme orange)
  rswifi >/dev/null 2>&1 &!
  exit
fi

# If INTERFACE is not defined then try some
if [ -z "$INTERFACE" ]
then
  for INTERFACE in wlan0 wlp2s0
  do
    if [ -d /sys/class/net/${INTERFACE}/wireless ]
    then
      break
    fi
  done
fi

# if no interface then don't show it
[ ! -d /sys/class/net/${INTERFACE}/wireless ] && exit

STATUS='W'
COLOR=''
if [ "$(cat /sys/class/net/$INTERFACE/operstate)" = 'up' ]
then
	# This gets the current wifi service that is connected to
	SERVICE=$(connmanctl services | awk '/.A(O|R) [[:graph:]]+[[:blank:]]+wifi/ {print $3}')
  STRENGTH=$(connmanctl services ${SERVICE} | awk '/Strength/ {print $3}')

  # ping google DNS to get some connection stats
  ping_info=$(ping -i 0.02 -q -w 1 -c 20 8.8.8.8)
  loss_pct=$(<<< $ping_info grep 'packet loss' | cut -d, -f3 | cut -d' ' -f 2 | tr -d %)
  avg_ms=$(printf %.0f $(<<< $ping_info grep 'rtt min' | cut -d' ' -f4 | cut -d'/' -f 2))
  std_ms=$(printf %.2f $(<<< $ping_info grep 'rtt min' | cut -d' ' -f4 | cut -d'/' -f 4))

	STATUS="W $STRENGTH"
  if (( $loss_pct > 5 )) || (( $avg_ms + $std_ms > 100 ))
  then
    STATUS=$STATUS" ($loss_pct% ${avg_ms}ó°¦’${std_ms}ms)"
    COLOR=$(colorscheme yellow)
  fi
  if (( $loss_pct > 50 )) 
  then
    COLOR=$(colorscheme magenta)
  fi
elif [ "$(cat /sys/class/net/$INTERFACE/operstate)" = 'dormant' ]
then
  COLOR=$(colorscheme blue)
elif [ "$(cat /sys/class/net/$INTERFACE/operstate)" = 'down' ]
then
  COLOR=$(colorscheme red)
else
  STATUS='W ?'
  COLOR=$(colorscheme orange)
fi

echo $STATUS
echo $STATUS
echo $COLOR
exit
