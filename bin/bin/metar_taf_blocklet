#!/bin/zsh
#
# Output is formatted for i3blocks
#
# args[in]
#   $1 button

# airport=KORD
# airport=KSBA
# airport=KMCC
# airport=KOAK
airport=KMIA

cache_dir=~/.cache/metar_taf_blocklet/
mkdir -p $cache_dir

if [[
  # no cache
  ! -e $cache_dir/last_cache_epoch
  # cache old
  || ! (( $(cat $cache_dir/last_cache_epoch) > $(date -d '-30sec' +%s) ))
  # blocklet interaction
  || ! -z $1
  ]]
then
  taf=$(curl -m 1 -s -X 'GET' \
    "https://aviationweather.gov/cgi-bin/data/taf.php?ids=$airport" \
    -H 'accept: */*'\
  )
  taf_ret=$?
  [[ $taf_ret == 0 ]] && echo $taf > $cache_dir/taf

  metar=$(curl -m 1 -s -X 'GET' \
    "https://aviationweather.gov/cgi-bin/data/metar.php?ids=$airport" \
    -H 'accept: */*'\
  )
  metar_ret=$?
  [[ $metar_ret == 0 ]] && echo $metar > $cache_dir/metar

  [[ $taf_ret == 0 && $metar_ret == 0 ]] && date +%s > $cache_dir/last_cache_epoch
fi
taf=$(cat $cache_dir/taf)
metar=$(cat $cache_dir/metar)

metar_cleaned=$(<<< $metar sed -r 's/( SLP[0-9]{3}\b| T[0-9]{8}\b| [0-9]{5}$)//g')
metar_split_remark=$(<<< $metar sed -r 's/ RMK/\n  RMK/g')
metar_no_remark=$(<<< $metar sed -r 's/ RMK.*//g')

case $1 in
  5) notify-send -t 60000 -a metar_blocklet METAR-TAF "$metar_split_remark\n$taf" ;;
  4) i3-msg -q exec "chromium --new-window https://e6bx.com/weather/$airport/?showDecoded=1&focuspoint=metardecoder" ;;
esac


color=''
if [[ ! -e $cache_dir/last_cache_epoch
  || ! (( $(cat $cache_dir/last_cache_epoch) > $(date -d '-60min' +%s) )) ]]
then
  color=$(colorscheme yellow)
fi

echo $metar_no_remark
echo $metar_no_remark
echo $color
exit
